<div class="container-fluid" style="background-color: #985f0d; position: absolute; left: 0px; top: 0px; right: 0px">
    <div class="row">
        <div class="col-sm-4" style="background-color: #0f0f0f">
            <div id="divMap">
                <form class="input-group ml-0" style="margin: 0px">
                    <input class="form-control my-1 mx-0" type="text" placeholder="Search" id="txtSearch">
                    </input>
                    <button class="btn btn-sm btn-default mx-0 mt-1" id="btnSearch">
                        <span>
                            <img src="/images/search.png" width="25" height="27">
                        </span>
                    </button>
                </form>
                <div id="map" class="embed-responsive embed-responsive-16by9 bounded border border-secondary"></div>
            </div>
        </div>
        <div class="bounded border border-secondary contain col-sm-8" style="background-color: #cd6b17">
            <div class="row">
                <div class="col-sm-8">
                    <div class="row">
                        <div>
                            <img src="/images/logo-instagram.png" width="" height="100" style="margin-left: 30px; margin-top: 0px;">
                        </div>
                    </div>
                    <div class="row" id="divListMedias" style="margin-top: 1px;">
                    </div>
                    <div class="row" id="divButtonPages" style="bottom: 0px; position: fixed; left: 47%">

                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="row">
                        <div class="bounded" id="divShowLocations" style="margin-top: 1px;">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="large-media" style="background-color: black">

    </div>
</div>

{{#section 'css'}}
    <style>
        #map {
            height: 640px;
            width: 435px;
            margin: 1px;
        }

        .page {
            background-color: #3c3c3c;
            color: white;
        }

        #divListMedias nav {
            min-width: 600px;
            margin: 1px;
        }

        #divListMedias .media {
            height: 100%;
            max-height: 130px;
            width: auto;
            max-width: 160px;
            display: block;
            margin: auto;
        }

        #divListMedias div:hover {
            background-color: rgba(8,7,10,0.09);
        }

        #divListMedias div.frame {
            height: 130px;
            width: 160px;
            margin: 10px;
            display: block;
            background-color: rgba(19,205,194,0.05);
        }

        #large-media img {
            height: auto;
            max-height: 500px;
            width: 100%;
            max-width: 660px;
            margin: auto;
            display: block;
            margin-top: 20px;
        }

        #large-media .carousel-inner {
            height: 500px;
            width: 660px;
            margin: auto;
            display: block;
            background-color: rgba(0,0,0,0.72);
        }

        #large-media li {
            margin-top: 20px;
            height: 20px;
            width: 50px;
            display: block;
            background-color: #3c3c3c;
        }

        #large-media li:hover {
            background-color: #286090;
        }

    </style>
{{/section}}

{{#section 'js'}}
    <script>
        var access_token = "837764412.e029fea.5eb9cf870a0d4a488034701f0d82f194";
        var map;
        var markers = [];
        var marker;
        var list_media;
        var curMediaIndex = 0;
        var domain = "http://instagramstreetview.herokuapp.com";
        function initMap()
        {
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 15,
                center: {lat: 10.7626391,
                    lng: 106.6820268},
                mapTypeControlOptions: {
                    style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
                    position: google.maps.ControlPosition.BOTTOM
                },
                fullscreenControlOptions: {
                    position: google.maps.ControlPosition.BOTTOM_LEFT
                },

            });

            var geocoder = new google.maps.Geocoder();
            map.addListener('click', function(e) {
                SearchLocationNearly(e.latLng);
            });

            var defaultBounds = new google.maps.LatLngBounds(
                    new google.maps.LatLng(-33.8902, 151.1759),
                    new google.maps.LatLng(-33.8474, 151.2631));
            var options = {
                bounds: defaultBounds,
                types: ['geocode'],
            };
            var input = document.getElementById('txtSearch');
            var btnSearch = document.getElementById('btnSearch');
            autocomplete = new google.maps.places.Autocomplete(input, options);
            var searchBox = new google.maps.places.SearchBox(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
            map.controls[google.maps.ControlPosition.TOP_RIGHT].push(btnSearch);
            map.addListener('bounds_changed', function() {
                searchBox.setBounds(map.getBounds());
            });

            $('#btnSearch').click(function () {
                google.maps.event.trigger( input, 'focus')
                google.maps.event.trigger( input, 'keydown', {keyCode:13})
            });

            var infoWindow;
            function clertMarkers() {
                markers.forEach(function(m) {
                    m.setMap(null);
                });
                if(marker)
                    marker.setMap(null);
            }

            searchBox.addListener('places_changed', function() {
                var places = searchBox.getPlaces();
                if(places.length == 1)
                {
                    SearchLocationNearly(places[0].geometry.location);
                }
                if (places.length == 0) {
                    return;
                }
                clertMarkers();
                markers = [];
                // For each place, get the icon, name and location.
                var bounds = new google.maps.LatLngBounds();
                places.forEach(function(place) {
                    if (!place.geometry) {
                        console.log("Returned place contains no geometry");
                        return;
                    }

                    // Create a marker for each place.
                    var tmp = new google.maps.Marker({
                        map: map,
                        title: place.name,
                        position: place.geometry.location
                    });
                    tmp.addListener('rightclick', function () {
                        if(infoWindow)
                            infoWindow.close();
                        infoWindow = new google.maps.InfoWindow({
                            content: place.name + '<br>' + place.formatted_address
                            + '<br>' + 'rating: ' + place.rating
                        });
                        infoWindow.open(map, tmp);
                    });

                    tmp.addListener('click', function () {
                        clertMarkers();
                        map.setCenter(tmp.position);
                        map.setZoom(15);
                        SearchLocationNearly(tmp.position);
                        marker = new google.maps.Marker({
                            map: map,
                            title: tmp.title,
                            position: tmp.position
                        });
                        marker.addListener('rightclick', function () {
                            if(infoWindow)
                                infoWindow.close();
                            infoWindow = new google.maps.InfoWindow({
                                content: place.name + '<br>' + place.formatted_address
                                + '<br>' + 'rating: ' + place.rating
                            });
                            infoWindow.open(map, tmp);
                        });
                    });
                    markers.push(tmp);

                    if (place.geometry.viewport) {
                        // Only geocodes have viewport.
                        bounds.union(place.geometry.viewport);
                    } else {
                        bounds.extend(place.geometry.location);
                    }
                });
                map.fitBounds(bounds);
            });
        }

        $('#divButtonPages').on('click', '.page', function () {
            var lat = $('#divButtonPages .nav').data("lat");
            var lng = $('#divButtonPages .nav').data("lng");
            var url = domain + "/api/media/search?page=" + $(this).data("index") + "&lat=" + lat + "&lng=" + lng + "&access_token=" + access_token;
            $.ajax({
                type: 'get',
                url: url,
                dataType: "json",
            }).done(function (rs) {
                ShowListMedias(rs);
            }).fail(function () {
                alert("fail");
            });
        });

        function createListPageButtons(rs) {
            var output = "<nav class=\"nav\" data-lat=\"" + rs.lat + "\" data-lng=\"" + rs.lng + "\">\n" +
                    "  <ul class=\"pagination justify-content-center\">";
            if(rs.showPrevPage)
                output += "<li class=\"page-item\">\n" +
                        "      <button class=\"page-link page\"  data-index=\"" + rs.prevPage + "\">Previous</button>\n" +
                        "    </li>";
            else
                output += "<li class=\"page-item disabled\">\n" +
                        "      <button class=\"page-link page\"  data-index=\"" + rs.prevPage + "\">Previous</button>\n" +
                        "    </li>";
            rs.pages.forEach(function (item) {
                if(item.isActive)
                {
                    output += "<li class=\"page-item active\">\n" +
                            "      <button class=\"page-link page\"  data-index=\"" + item.pageValue + "\">" + item.pageValue + "</button>\n" +
                            "    </li>";
                }
                else
                {
                    output += "<li class=\"page-item\">\n" +
                            "      <button class=\"page-link page\"  data-index=\"" + item.pageValue + "\">" + item.pageValue + "</button>\n" +
                            "    </li>";
                }
            });
            if(rs.showNextPage)
                output += "<li class=\"page-item\">\n" +
                        "      <button class=\"page-link page\"  data-index=\"" + rs.nextPage + "\">Next</button>\n" +
                        "    </li>";
            else
                output += "<li class=\"page-item disabled\">\n" +
                        "      <button class=\"page-link page\"  data-index=\"" + rs.nextPage + "\">Next</button>\n" +
                        "    </li>";
            output += "</ul>\n" +
                    "</nav>";
            return output;
        }

        function ShowListMedias(rs) {
            var output = "<nav class=\"navbar navbar-light bg-light\">";
            list_media = rs.data.list;
            rs.data.list.forEach(function (item, index) {
                var src = item.images.standard_resolution.url;
                var caption = "";
                if(item.caption)
                    caption = item.caption.text;
                console.log(item.type);
                var offset = (index % 3) * 4;
                var col = "col-sm-offset-" + offset;
                if(item.type == 'video')
                {
                    src = item.videos.standard_resolution.url;
                    output += "<div class=\"col-sm-4\">\n" +
                            "<div class=\"frame\">\n" +
                            "<video allowfullscreen=\"true\" class=\"media\" controls>\n" +
                            "<source src=\"" + src + "\" type=\"video/mp4\" data-index=\"" + index + "\">\n" +
                            "</video>\n" +
                            "</div>\n" +
                            "</div>\n";
                }
                else
                {
                    output += "<div class=\"col-sm-4\">\n" +
                            "<div type=\"button\" class=\"frame\">\n" +
                            "<img src=\"" + src + "\" class=\"media\" data-src=\""
                            + src + "\" data-index=\""
                            + index + "\">\n" +
                            "</div>\n" +
                            "</div>\n";
                }
            });
            output += "</nav>";
            $('#divListMedias').html(output);
            //list page button
            var output = createListPageButtons(rs);
            $('#divButtonPages').html(output);
        }

        function ShowListLocations(rs) {
            var output = "<div class=\"list-group-item list-group-item-info\" style=\'background-color: rgba(0,0,0,0.82); color: #286090; font-weight: bold\'>\n" +
                    "                        List of locations\n" +
                    "                    </div>\n" +
                    "<div class=\"list-group\" id=\"divListLocations\" style=\"height: 589px; overflow: auto\">\n";
            rs.data.forEach(function (item) {
                output += "<button class=\"list-group-item list-group-item-action location\" data-lat=\"" + item.latitude +"\" data-lng=\"" + item.longitude + "\">\n" +
                        item.name + "\n" +
                        "                    </button>";
            });
            output += "\n</div>";
            $('#divShowLocations').html(output);
        }
        var prevItem;
        var prevLi;

        $('#divShowLocations').on('click', '.location', function () {
            if(prevItem)
                prevItem.css({
                    "background-color": "",
                    "font-weight": "normal"
                });
            prevItem = $(this);
            $(this).css({
                "background-color": "#31708f",
                "font-weight": "bold"
            });
            var lat = $(this).data("lat");
            var lng = $(this).data("lng");
            var url = doamin + "/api/media/search?lat=" + lat + "&lng=" + lng + "&access_token=" + access_token;
            $.ajax({
                type: 'get',
                url: url,
                dataType: "json",
            }).done(function (rs) {
                ShowListMedias(rs);
            }).fail(function () {
                alert("fail");
            });
        });

        function SearchLocationNearly(position) {
            var url = domain + "/api/locations/search?lat=" + position.lat() + "&lng=" + position.lng() + "&access_token=" + access_token;
            $.ajax({
                type: 'get',
                url: url,
                dataType: "json",
            }).done(function (rs) {
                ShowListLocations(rs);
            }).fail(function () {
                alert("fail");
            });
        }

        function SetTitleDlg(caption) {
            if(caption)
                $("#large-media").dialog("option", "title", caption.text);
            else
                $("#large-media").dialog("option", "title", "No caption");
        }

        $('#divListMedias').on('click', 'img', function () {
            var i = $(this).data('index');
            curMediaIndex = i;
            SetTitleDlg(list_media[curMediaIndex].caption);
            var output = "<div id=\"scroll_list\" class=\"carousel slide\" data-ride=\"carousel\">\n" +
                    "<ol class=\"carousel-indicators\">\n";
            list_media.forEach(function (item, index) {
                if(index == i)
                {
                    output += "<li data-target=\"#scroll_list\" data-slide-to=\"" + index + "\" class=\"active\"></li>\n";
                }
                else
                    output += "<li data-target=\"#scroll_list\" data-slide-to=\"" + index + "\"></li>\n";
            });
            output += "</ol>\n";
            output += "<div class=\"carousel-inner\">\n";
            list_media.forEach(function (item, index) {
                var caption = item.caption ? item.caption.text:"No caption";
                if(index == i)
                {
                    output += "<div class=\"carousel-item active\" title=\"" + caption + "\">\n" +
                            "      <img class=\"d-block w-100\" data-caption=\"" + caption + "\" src=\"" + item.images.standard_resolution.url + "\">\n" +
                            "    </div>\n";
                }
                else
                {
                    output += "<div class=\"carousel-item\" type=\'button\' title=\"" + caption + "\">\n" +
                            "      <img class=\"d-block w-100\" data-caption=\"" + caption + "\" src=\"" + item.images.standard_resolution.url + "\">\n" +
                            "    </div>\n";
                }
            });
            output += "</div>\n";
            output += "<a class=\"carousel-control-prev\" href=\"#scroll_list\" role=\"button\" data-slide=\"prev\">\n" +
                    "    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n" +
                    "    <span class=\"sr-only\">Previous</span>\n" +
                    "  </a>\n" +
                    "  <a class=\"carousel-control-next\" href=\"#scroll_list\" role=\"button\" data-slide=\"next\">\n" +
                    "    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n" +
                    "    <span class=\"sr-only\">Next</span>\n" +
                    "  </a>\n";
            output += "</div>\n";
            var sec = "#large-media li[data-slide-to=\"" + curMediaIndex + "\"]";
            $('#large-media').html(output);
            $(sec).css({
                "background-color": "#286090"
            });
            $("#large-media").dialog('open');
        });

        $('#large-media').on('click', 'li', function () {
            $('#large-media li').css({
                "background-color": "#3c3c3c"
            });
            $(this).css({
                "background-color": "#286090"
            });
            curMediaIndex = $(this).data("slide-to");
            var caption = list_media[curMediaIndex].caption;
        });

        $('#large-media').on('click', 'a', function () {
            var action = $(this).data("slide");
            $('#large-media li').css({
                "background-color": "#3c3c3c"
            });
            if(action == 'next')
                curMediaIndex = (curMediaIndex + 1) % list_media.length;
            else
                curMediaIndex = (curMediaIndex + list_media.length - 1) % list_media.length;
            var sec = "#large-media li[data-slide-to=\"" + curMediaIndex + "\"]";
            $(sec).css({
                "background-color": "#286090"
            });
            var caption = list_media[curMediaIndex].caption;
            SetTitleDlg(caption);
        });

        $(document).ready(function () {
            $( function() {
                $("#large-media").dialog({
                    resizable: false,
                    height: 600,
                    modal: true,
                    width: 700,
                    autoOpen: false,
                    hide: { effect: "fade", duration: 600 },
                    show: { effect: "blind", duration: 600 },
                });
            });
        });
    </script>
{{/section}}
